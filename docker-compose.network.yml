services:
  app:
    build:
      context: .
      args:
        - DEV=true
    container_name: club-app-network
    ports:
      - '8000:8000'
    volumes:
      - ./app:/app
      - static-clubs-network:/vol/web
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py init_superuser &&
             entrypoint.sh"
    env_file:
      - .env
    depends_on:
      - postgres
    networks:
      - cluster

  postgres:
    image: postgres:13-alpine
    volumes:
      - postgres-clubs-network:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=devdatabase
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=devpass
    networks:
      - cluster
      
  redis:
    image: redis:alpine
    ports:
      - 6379:6379
    networks:
      - cluster

  celery:
    build:
      context: .
      args:
        - DEV=true
    restart: unless-stopped
    user: django-user
    command: ['celery', '-A', 'app', 'worker', '--loglevel=info']
    volumes:
      - ./app:/app
      - static-clubs-network:/vol/web
    depends_on:
      - redis
      - postgres
      - app
    env_file:
      - .env
    networks:
      - cluster

  celerybeat:
    build:
      context: .
      args:
        - DEV=true
    user: django-user
    restart: unless-stopped
    command:
      [
        'celery',
        '-A',
        'app',
        'beat',
        '--loglevel=info',
        '--scheduler',
        'django_celery_beat.schedulers:DatabaseScheduler'
      ]
    volumes:
      - ./app:/app
      - static-clubs-network:/vol/web
    depends_on:
      - redis
      - postgres
      - celery
      - app
    env_file:
      - .env
    networks:
      - cluster

volumes:
  postgres-clubs-network:
  static-clubs-network:

networks:
  cluster:
    name: clubs_cluster
