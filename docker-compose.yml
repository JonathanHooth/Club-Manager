services:
  app:
    build:
      context: .
      args:
        - DEV=true
    container_name: clubs-app
    ports:
      - '8000:8000'
    volumes:
      - ./app:/app
      - static-clubs-dev:/vol/web
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py init_superuser &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - DJANGO_ENV=dev
      - DB_HOST=clubs-dev-db
      - DB_NAME=devdatabase
      - DB_USER=devuser
      - DB_PASS=devpass
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=*
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL:-admin@example.com}
      - DJANGO_SUPERUSER_PASS=${DJANGO_SUPERUSER_PASS:-changeme}
      - DJANGO_BASE_URL=${DJANGO_BASE_URL:-http://localhost:8000}
      - CREATE_SUPERUSER=1
      - EMAIL_HOST_USER=${EMAIL_HOST_USER:-""}
      - EMAIL_HOST_PASS=${EMAIL_HOST_PASS:-""}
      - CONSOLE_EMAIL_BACKEND=${CONSOLE_EMAIL_BACKEND:-1}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY:-""}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL:-""}

      - CSRF_TRUSTED_ORIGINS=http://localhost:8000
      - CSRF_COOKIE_SECURE=0
      - SESSION_COOKIE_SECURE=0

      - CELERY_BROKER_URL=redis://clubs-dev-redis:6379/0
      - CELERY_RESULT_BACKEND=redis://clubs-dev-redis:6379/0
      - CELERY_ACKS_LATE=True
      - DJANGO_DB=postgresql
      - DJANGO_REDIS_URL=redis://clubs-dev-redis:6379/1

      - AWS_EXECUTION_ENV=0
      - S3_STORAGE_BACKEND=0
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:13-alpine
    container_name: clubs-dev-db
    volumes:
      - postgres-clubs-dev:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=devdatabase
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=devpass

  redis:
    image: redis:alpine
    container_name: clubs-dev-redis
    ports:
      - 6379:6379

  celery:
    build:
      context: .
      args:
        - DEV=true
    restart: unless-stopped
    user: django-user
    command: ['celery', '-A', 'app', 'worker', '--loglevel=info']
    volumes:
      - ./app:/app
      - static-clubs-dev:/vol/web
    depends_on:
      - redis
      - postgres
      - app
    environment:
      - DEBUG=1
      - CELERY_BROKER_URL=redis://clubs-dev-redis:6379/0
      - CELERY_RESULT_BACKEND=redis://clubs-dev-redis:6379/0
      - CELERY_ACKS_LATE=True

      - POSTGRES_HOST=clubs-dev-db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=devdatabase
      - POSTGRES_NAME=devdatabase
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=devpass

      - DJANGO_DB=postgresql
      - DJANGO_REDIS_URL=redis://clubs-dev-redis:6379/1
      - DB_HOST=clubs-dev-db
      - DB_NAME=devdatabase
      - DB_USER=devuser
      - DB_PASS=devpass

      - EMAIL_HOST_USER=${EMAIL_HOST_USER:-""}
      - EMAIL_HOST_PASS=${EMAIL_HOST_PASS:-""}
      - CONSOLE_EMAIL_BACKEND=${CONSOLE_EMAIL_BACKEND:-1}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY:-""}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL:-""}

      - AWS_EXECUTION_ENV=0
      - S3_STORAGE_BACKEND=0

  celerybeat:
    build:
      context: .
      args:
        - DEV=true
    user: django-user
    restart: unless-stopped
    command:
      [
        'celery',
        '-A',
        'app',
        'beat',
        '--loglevel=info',
        '--scheduler',
        'django_celery_beat.schedulers:DatabaseScheduler'
      ]
    volumes:
      - ./app:/app
      - static-clubs-dev:/vol/web
    depends_on:
      - redis
      - postgres
      - celery
      - app
    environment:
      - DEBUG=1
      - CELERY_BROKER_URL=redis://clubs-dev-redis:6379/0
      - CELERY_RESULT_BACKEND=redis://clubs-dev-redis:6379/0
      - DJANGO_DB=postgresql

      - POSTGRES_HOST=clubs-dev-db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=devdatabase
      - POSTGRES_NAME=devdatabase
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=devpass

      - DB_HOST=clubs-dev-db
      - DB_NAME=devdatabase
      - DB_USER=devuser
      - DB_PASS=devpass

      - EMAIL_HOST_USER=${EMAIL_HOST_USER:-""}
      - EMAIL_HOST_PASS=${EMAIL_HOST_PASS:-""}
      - CONSOLE_EMAIL_BACKEND=${CONSOLE_EMAIL_BACKEND:-1}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY:-""}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL:-""}

      - AWS_EXECUTION_ENV=0
      - S3_STORAGE_BACKEND=0

  coverage:
    image: nginx
    ports:
      - '8001:80'
    volumes:
      - ./app/htmlcov:/usr/share/nginx/html

volumes:
  postgres-clubs-dev:
  static-clubs-dev:
