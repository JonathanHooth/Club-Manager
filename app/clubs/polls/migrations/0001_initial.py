# Generated by Django 4.2.19 on 2025-02-23 03:24

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ChoiceInput",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("multiple", models.BooleanField(default=False)),
                (
                    "multiple_choice_type",
                    models.CharField(
                        blank=True,
                        choices=[("select", "Select"), ("checkbox", "Checkbox")],
                        default="checkbox",
                        null=True,
                    ),
                ),
                (
                    "single_choice_type",
                    models.CharField(
                        blank=True,
                        choices=[("select", "Select"), ("radio", "Radio")],
                        default="radio",
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ChoiceInputOption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("label", models.CharField(max_length=100)),
                ("value", models.CharField(blank=True, default="", max_length=100)),
                ("image", models.ImageField(blank=True, null=True, upload_to="")),
                ("order", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Poll",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=64)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PollField",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "field_type",
                    models.CharField(
                        choices=[
                            ("question", "Question"),
                            ("page_break", "Page Break"),
                            ("markup", "Markup"),
                        ],
                        default="question",
                    ),
                ),
                ("order", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="PollMarkup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("content", models.TextField(default="")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PollPageBreak",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PollQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("label", models.CharField()),
                ("description", models.TextField(blank=True, null=True)),
                ("image", models.ImageField(blank=True, null=True, upload_to="")),
                ("required", models.BooleanField(default=False)),
                (
                    "input_type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("choice", "Choice"),
                            ("range", "Range"),
                            ("upload", "Upload"),
                        ],
                        default="text",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PollSubmission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("data", models.JSONField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RangeInput",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("min_value", models.IntegerField(default=0)),
                ("max_value", models.IntegerField(default=100)),
                ("step", models.IntegerField(default=1)),
                ("initial_value", models.IntegerField(default=0)),
                ("unit", models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TextInput",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "text_type",
                    models.CharField(
                        choices=[
                            ("short", "Short"),
                            ("long", "Long"),
                            ("rich", "Rich"),
                        ],
                        default="short",
                    ),
                ),
                (
                    "min_length",
                    models.PositiveIntegerField(
                        blank=True,
                        default=1,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("max_length", models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="UploadInput",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("file_types", models.CharField(default="any")),
                ("max_files", models.IntegerField(default=1)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddConstraint(
            model_name="textinput",
            constraint=models.CheckConstraint(
                check=models.Q(("min_length__lt", models.F("max_length"))),
                name="min_length_less_than_max_length",
            ),
        ),
        migrations.AddField(
            model_name="pollsubmission",
            name="poll",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="submissions",
                to="polls.poll",
            ),
        ),
        migrations.AddField(
            model_name="pollsubmission",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="poll_submissions",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="pollquestion",
            name="choice_input",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="question",
                to="polls.choiceinput",
            ),
        ),
        migrations.AddField(
            model_name="pollquestion",
            name="range_input",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="question",
                to="polls.rangeinput",
            ),
        ),
        migrations.AddField(
            model_name="pollquestion",
            name="text_input",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="question",
                to="polls.textinput",
            ),
        ),
        migrations.AddField(
            model_name="pollquestion",
            name="upload_input",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="question",
                to="polls.uploadinput",
            ),
        ),
        migrations.AddField(
            model_name="pollfield",
            name="markup",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="field",
                to="polls.pollmarkup",
            ),
        ),
        migrations.AddField(
            model_name="pollfield",
            name="page_break",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="field",
                to="polls.pollpagebreak",
            ),
        ),
        migrations.AddField(
            model_name="pollfield",
            name="poll",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="fields",
                to="polls.poll",
            ),
        ),
        migrations.AddField(
            model_name="pollfield",
            name="question",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="field",
                to="polls.pollquestion",
            ),
        ),
        migrations.AddField(
            model_name="choiceinputoption",
            name="input",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="options",
                to="polls.choiceinput",
            ),
        ),
        migrations.AddConstraint(
            model_name="choiceinput",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("multiple", True), ("multiple_choice_type__isnull", False)
                    ),
                    models.Q(
                        ("multiple", False), ("single_choice_type__isnull", False)
                    ),
                    _connector="OR",
                ),
                name="poll_choice_type",
            ),
        ),
        migrations.AddConstraint(
            model_name="pollquestion",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("choice_input__isnull", True),
                        ("range_input__isnull", True),
                        ("text_input__isnull", False),
                        ("upload_input__isnull", True),
                    ),
                    models.Q(
                        ("choice_input__isnull", False),
                        ("range_input__isnull", True),
                        ("text_input__isnull", True),
                        ("upload_input__isnull", True),
                    ),
                    models.Q(
                        ("choice_input__isnull", True),
                        ("range_input__isnull", False),
                        ("text_input__isnull", True),
                        ("upload_input__isnull", True),
                    ),
                    models.Q(
                        ("choice_input__isnull", True),
                        ("range_input__isnull", True),
                        ("text_input__isnull", True),
                        ("upload_input__isnull", False),
                    ),
                    models.Q(
                        ("choice_input__isnull", True),
                        ("range_input__isnull", True),
                        ("text_input__isnull", True),
                        ("upload_input__isnull", True),
                    ),
                    _connector="OR",
                ),
                name="poll_question_union_type",
            ),
        ),
        migrations.AddConstraint(
            model_name="pollfield",
            constraint=models.UniqueConstraint(
                fields=("order", "poll"), name="unique_field_order_per_poll"
            ),
        ),
        migrations.AddConstraint(
            model_name="pollfield",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("field_type", "question"),
                        ("markup__isnull", True),
                        ("page_break__isnull", True),
                    ),
                    models.Q(
                        ("field_type", "page_break"),
                        ("markup__isnull", True),
                        ("question__isnull", True),
                    ),
                    models.Q(
                        ("field_type", "markup"),
                        ("page_break__isnull", True),
                        ("question__isnull", True),
                    ),
                    models.Q(
                        ("markup__isnull", True),
                        ("page_break__isnull", True),
                        ("question__isnull", True),
                    ),
                    _connector="OR",
                ),
                name="poll_field_union_type",
            ),
        ),
        migrations.AddConstraint(
            model_name="choiceinputoption",
            constraint=models.UniqueConstraint(
                fields=("order", "input"), name="unique_choiceoption_order_per_input"
            ),
        ),
    ]
